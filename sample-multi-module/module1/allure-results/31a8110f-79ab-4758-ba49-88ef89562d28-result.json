{
  "name": "Start kotest specification Scenario 2 (1)",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Test failed for (it, --1--) with error Step error1",
    "trace": "java.lang.AssertionError: Test failed for (it, --1--) with error Step error1\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invokeSuspend(ExampleStringSpec.kt:23)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invoke(ExampleStringSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat \b\b\b(Coroutine boundary.\b(\b)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:188)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\nCaused by: java.lang.AssertionError: Test failed for (it, --1--) with error Step error1\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invokeSuspend(ExampleStringSpec.kt:23)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invoke(ExampleStringSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1$1.invokeSuspend(ExampleStringSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1$1.invoke(ExampleStringSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\t... 67 more\r\n"
  },
  "stage": "finished",
  "description": "",
  "steps": [
    {
      "name": "Allure aspectj step annotation on method 'step1'",
      "status": "passed",
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1595874906636,
      "stop": 1595874906636
    },
    {
      "name": "Allure aspectj step annotation on method 'step2'",
      "status": "passed",
      "stage": "finished",
      "steps": [
        {
          "name": "Allure aspectj nested step annotation on method 'stepNested'",
          "status": "passed",
          "stage": "finished",
          "steps": [],
          "attachments": [],
          "parameters": [],
          "start": 1595874906637,
          "stop": 1595874906637
        }
      ],
      "attachments": [],
      "parameters": [],
      "start": 1595874906637,
      "stop": 1595874906637
    },
    {
      "name": "Allure aspectj step throw exception1",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false,
        "message": "Step error1",
        "trace": "java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1$1.invokeSuspend(ExampleStringSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1$1.invoke(ExampleStringSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invokeSuspend(ExampleStringSpec.kt:23)\r\n\tat ru.iopump.kotest.ExampleStringSpec$1.invoke(ExampleStringSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"
      },
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1595874906637,
      "stop": 1595874906638
    },
    {
      "name": "Allure aspectj step annotation on method 'step1'",
      "status": "passed",
      "stage": "finished",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1595874906650,
      "stop": 1595874906650
    },
    {
      "name": "Allure aspectj step annotation on method 'step2'",
      "status": "passed",
      "stage": "finished",
      "steps": [
        {
          "name": "Allure aspectj nested step annotation on method 'stepNested'",
          "status": "passed",
          "stage": "finished",
          "steps": [],
          "attachments": [],
          "parameters": [],
          "start": 1595874906650,
          "stop": 1595874906650
        }
      ],
      "attachments": [],
      "parameters": [],
      "start": 1595874906650,
      "stop": 1595874906650
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1595874906629,
  "stop": 1595874906651,
  "uuid": "31a8110f-79ab-4758-ba49-88ef89562d28",
  "historyId": "Start kotest specification Scenario 2 (1)",
  "testCaseId": "ruiopumpkotestExampleStringSpec Start kotest specification Scenario 2",
  "fullName": "ru.iopump.kotest.ExampleStringSpec Start kotest specification Scenario 2",
  "labels": [
    {
      "name": "suite",
      "value": "ru.iopump.kotest.ExampleStringSpec"
    },
    {
      "name": "thread",
      "value": "9380@DESKTOP-M1LKJ4G.SpecRunner-19 @coroutine#25(56)"
    },
    {
      "name": "host",
      "value": "DESKTOP-M1LKJ4G"
    },
    {
      "name": "language",
      "value": "kotlin"
    },
    {
      "name": "framework",
      "value": "kotest"
    },
    {
      "name": "package",
      "value": "ru.iopump.kotest"
    },
    {
      "name": "epic",
      "value": "Allure feature annotation on test class"
    },
    {
      "name": "feature",
      "value": "StringSpec"
    }
  ],
  "links": []
}