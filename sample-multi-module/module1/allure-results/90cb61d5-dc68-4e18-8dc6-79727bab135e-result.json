{
  "name": "Given: [PRJ-100] Start kotest specification Scenario [2]",
  "status": "failed",
  "statusDetails": {
    "known": false,
    "muted": false,
    "flaky": false,
    "message": "Step error1",
    "trace": "java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat \b\b\b(Coroutine boundary.\b(\b)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:188)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\nCaused by: java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$Context.registerTestCase(SingleInstanceSpecRunner.kt:39)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1$contextp$1.registerTestCase(TestCaseExecutor.kt:192)\r\n\tat io.kotest.core.test.TestContext.registerTestCase(TestContext.kt:41)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:50)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:39)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addThen(GivenScope.kt:80)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.Then(GivenScope.kt:74)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invoke(BehaviorSpecScope.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"
  },
  "stage": "finished",
  "description": "\n    This is multiline description.\n    It must be a new line\n",
  "steps": [
    {
      "name": "When: Start step 1 [PRJ-110] - SecondIterArg",
      "status": "passed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false
      },
      "stage": "finished",
      "description": "\n    This is multiline description.\n    It must be a new line\n",
      "steps": [
        {
          "name": "Allure aspectj step annotation on method 'step1'",
          "status": "passed",
          "stage": "finished",
          "steps": [],
          "attachments": [],
          "parameters": [],
          "start": 1595874906275,
          "stop": 1595874906275
        }
      ],
      "attachments": [],
      "parameters": [],
      "start": 1595874906273,
      "stop": 1595874906276
    },
    {
      "name": "Then: [PRJ-160] Nested step has been printed - SecondIterArg",
      "status": "failed",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false,
        "message": "Step error1",
        "trace": "java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat \b\b\b(Coroutine boundary.\b(\b)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:188)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\nCaused by: java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$Context.registerTestCase(SingleInstanceSpecRunner.kt:39)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1$contextp$1.registerTestCase(TestCaseExecutor.kt:192)\r\n\tat io.kotest.core.test.TestContext.registerTestCase(TestContext.kt:41)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:50)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:39)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addThen(GivenScope.kt:80)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.Then(GivenScope.kt:74)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invoke(BehaviorSpecScope.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"
      },
      "stage": "finished",
      "description": "\n    This is multiline description.\n    It must be a new line\n",
      "steps": [
        {
          "name": "Allure aspectj step throw exception1",
          "status": "failed",
          "statusDetails": {
            "known": false,
            "muted": false,
            "flaky": false,
            "message": "Step error1",
            "trace": "java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$Context.registerTestCase(SingleInstanceSpecRunner.kt:39)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1$contextp$1.registerTestCase(TestCaseExecutor.kt:192)\r\n\tat io.kotest.core.test.TestContext.registerTestCase(TestContext.kt:41)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:50)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:39)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addThen(GivenScope.kt:80)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.Then(GivenScope.kt:74)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invoke(BehaviorSpecScope.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"
          },
          "stage": "finished",
          "steps": [],
          "attachments": [],
          "parameters": [],
          "start": 1595874906287,
          "stop": 1595874906287
        }
      ],
      "attachments": [],
      "parameters": [],
      "start": 1595874906284,
      "stop": 1595874906289
    },
    {
      "name": "And: Step 2 has been printed too [PRJ-1300] - SecondIterArg",
      "status": "broken",
      "statusDetails": {
        "known": false,
        "muted": false,
        "flaky": false,
        "message": "Один из вложенных сценариев завершился неуспешно. Текущий сценарий будет отменен",
        "trace": "org.opentest4j.TestAbortedException: Один из вложенных сценариев завершился неуспешно. Текущий сценарий будет отменен\r\n\tat ru.iopump.kotest.IoPumpAllureListener.checkAssume(IoPumpAllureListener.kt:144)\r\n\tat ru.iopump.kotest.IoPumpAllureListener.beforeTest(IoPumpAllureListener.kt:83)\r\n\tat io.kotest.core.runtime.CallbacksKt.invokeBeforeTest(callbacks.kt:70)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:117)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$Context.registerTestCase(SingleInstanceSpecRunner.kt:39)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1$contextp$1.registerTestCase(TestCaseExecutor.kt:192)\r\n\tat io.kotest.core.test.TestContext.registerTestCase(TestContext.kt:41)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:50)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addContainerTest(ContainerScope.kt:35)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addContainerTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addAnd(GivenScope.kt:40)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.And(GivenScope.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:35)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invoke(BehaviorSpecScope.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat \b\b\b(Coroutine boundary.\b(\b)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:188)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\nCaused by: java.lang.AssertionError: Step error1\r\n\tat ru.iopump.kotest.StepsKt.stepException1(Steps.kt:23)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invokeSuspend(ExampleBddSpec.kt:33)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1$2.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:29)\r\n\tat io.kotest.core.runtime.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.test.AssertionModeKt.executeWithAssertionsCheck(AssertionMode.kt:39)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:28)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$Context.registerTestCase(SingleInstanceSpecRunner.kt:39)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1$contextp$1.registerTestCase(TestCaseExecutor.kt:192)\r\n\tat io.kotest.core.test.TestContext.registerTestCase(TestContext.kt:41)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:50)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.ContainerScope$DefaultImpls.addTest(ContainerScope.kt:39)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addTest(GivenScope.kt:25)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.addThen(GivenScope.kt:80)\r\n\tat io.kotest.core.spec.style.scopes.GivenScope.Then(GivenScope.kt:74)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invokeSuspend(ExampleBddSpec.kt:32)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.data.ForAll1Kt.forAll(forAll1.kt:9)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invokeSuspend(ExampleBddSpec.kt:27)\r\n\tat ru.iopump.kotest.ExampleBddSpec$1.invoke(ExampleBddSpec.kt)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invokeSuspend(BehaviorSpecScope.kt:37)\r\n\tat io.kotest.core.spec.style.scopes.BehaviorSpecScope$addGiven$1.invoke(BehaviorSpecScope.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:16)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:43)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:15)\r\n\tat io.kotest.core.runtime.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.runtime.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:27)\r\n\tat io.kotest.core.runtime.ExecutionsKt.executeWithBehaviours(executions.kt:14)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invokeSuspend(TestCaseExecutor.kt:195)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invokeSuspend(TestCaseExecutor.kt:189)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ReplayKt.replay(replay.kt:19)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invokeSuspend(TestCaseExecutor.kt:184)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:183)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:47)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.runtime.ExecutorExecutionContext.executeWithTimeoutInterruption-D5N0EJY(ExecutorExecutionContext.kt:46)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:182)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:111)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:32)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:118)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invokeSuspend(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor$intercept$2.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:83)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.intercept(TestCaseExecutor.kt:69)\r\n\tat io.kotest.core.runtime.TestCaseExecutor.execute(TestCaseExecutor.kt:50)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:61)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:71)\r\n\tat io.kotest.core.engine.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:78)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:79)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:54)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:36)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.core.engine.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:77)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"
      },
      "stage": "finished",
      "description": "\n    This is multiline description.\n    It must be a new line\n",
      "steps": [],
      "attachments": [],
      "parameters": [],
      "start": 1595874906296,
      "stop": 1595874906298
    }
  ],
  "attachments": [],
  "parameters": [],
  "start": 1595874906270,
  "stop": 1595874906434,
  "uuid": "90cb61d5-dc68-4e18-8dc6-79727bab135e",
  "historyId": "Given: [PRJ-100] Start kotest specification Scenario [2]",
  "testCaseId": "ruiopumpkotestExampleBddSpec Given PRJ100 Start kotest specification Scenario 2",
  "fullName": "ru.iopump.kotest.ExampleBddSpec Given: [PRJ-100] Start kotest specification Scenario [2]",
  "labels": [
    {
      "name": "suite",
      "value": "ru.iopump.kotest.ExampleBddSpec"
    },
    {
      "name": "thread",
      "value": "9380@DESKTOP-M1LKJ4G.SpecRunner-1 @coroutine#5(37)"
    },
    {
      "name": "host",
      "value": "DESKTOP-M1LKJ4G"
    },
    {
      "name": "language",
      "value": "kotlin"
    },
    {
      "name": "framework",
      "value": "kotest"
    },
    {
      "name": "package",
      "value": "ru.iopump.kotest"
    },
    {
      "name": "epic",
      "value": "Allure feature annotation on test class"
    },
    {
      "name": "feature",
      "value": "Behavior"
    }
  ],
  "links": [
    {
      "name": "TTT-666",
      "url": "https://example.org/issue/TTT-666",
      "type": "issue"
    },
    {
      "name": "TTT-777",
      "url": "https://example.org/issue/TTT-777",
      "type": "issue"
    },
    {
      "name": "http://iopump.ru",
      "url": "http://iopump.ru",
      "type": "custom"
    },
    {
      "name": "https://ya.ru",
      "url": "https://ya.ru",
      "type": "custom"
    },
    {
      "name": "PRJ-100",
      "url": "https://example.org/jira/PRJ-100",
      "type": "jira"
    },
    {
      "name": "PRJ-110",
      "url": "https://example.org/jira/PRJ-110",
      "type": "jira"
    },
    {
      "name": "PRJ-160",
      "url": "https://example.org/jira/PRJ-160",
      "type": "jira"
    },
    {
      "name": "PRJ-1300",
      "url": "https://example.org/jira/PRJ-1300",
      "type": "jira"
    }
  ]
}