plugins {
    id 'idea'
    id 'com.gradle.plugin-publish' version "$gradlePublishVersion"
    id 'groovy-gradle-plugin'
    id 'com.github.ben-manes.versions' version "$benManesPluginVersion"
}
apply from: "$rootDir/gradle/util.gradle"
repositories { mavenLocal(); mavenCentral() }
idea { module { downloadJavadoc = true; downloadSources = true } }
gradlePlugin {
    plugins {
        allureServerPlugin {
            displayName = 'Allure server (allure-server iopump) integration gradle plugin'
            description = 'Add tasks and extension for aggregate allure results to zip archive / send to your allure server / generate report / get report url and send to your CI. See docs / examples: https://github.com/kochetkov-ma/allure-server-gradle'
            id = 'ru.iopump.qa.allure'
            implementationClass = 'ru.iopump.qa.allure.AllureServerPlugin'
        }
    }
}
wrapper { distributionType = Wrapper.DistributionType.ALL; gradleVersion = gradleWrapperVersion }
dependencies {
    implementation "org.apache.httpcomponents:httpclient:$httpcomponentsVersion"
    implementation "org.apache.httpcomponents:httpmime:$httpcomponentsVersion"
    testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion"
    testImplementation "org.spockframework:spock-core:$spockVersion"
    testImplementation "org.testcontainers:spock:$testcontainersVersion"
}
pluginBundle {
    website = 'http://allure.iopump.ru/'
    vcsUrl = 'https://github.com/kochetkov-ma/allure-server-gradle'
    description = 'Allure server (allure-server iopump) integration gradle plugin'
    tags = ['allure-server', 'iopump', 'iopump.ru', 'kochetkov-ma']
}